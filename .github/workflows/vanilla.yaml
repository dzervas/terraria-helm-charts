---

name: Build & Release Vanilla

on:
  push:
    branches:
      - master

permissions:
  contents: write
  packages: write

jobs:
  paths:
    runs-on: ubuntu-latest
    outputs:
      vanilla-image: ${{ steps.changes.outputs.vanilla-image }}
      vanilla-chart: ${{ steps.changes.outputs.vanilla-chart }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            vanilla-image:
              - 'images/vanilla/**'
            vanilla-chart:
              - 'charts/vanilla/Chart.yaml'
  image:
    runs-on: ubuntu-latest
    needs: paths
    if: needs.paths.outputs.vanilla-image == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get current version
        run: echo "VERSION=$(grep 'ARG VERSION=' images/vanilla/Dockerfile | grep -o '[0-9.-]\+')" >>$GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./images/vanilla
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/dzervas/terraria:vanilla-latest
            ghcr.io/dzervas/terraria:vanilla-${{ env.VERSION }}
  chart:
    runs-on: ubuntu-latest
    needs: paths
    if: needs.paths.outputs.vanilla-chart == 'true' || needs.paths.outputs.vanilla-image
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_RELEASE_NAME_TEMPLATE: "{{ .Version }}"
